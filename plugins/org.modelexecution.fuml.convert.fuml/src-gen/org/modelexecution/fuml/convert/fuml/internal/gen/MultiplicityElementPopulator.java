/*
* Copyright (c) 2013 Vienna University of Technology.
* All rights reserved. This program and the accompanying materials are made 
* available under the terms of the Eclipse Public License v1.0 which accompanies 
* this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html
* 
* Contributors:
* Philip Langer - initial API and generator
* Tanja Mayerhofer - generator
*/
package org.modelexecution.fuml.convert.fuml.internal.gen;
    	
import javax.annotation.Generated;

import org.modelexecution.fuml.convert.fuml.internal.IElementPopulator;
import org.modelexecution.fuml.convert.impl.ConversionResultImpl;

@Generated(value="Generated by org.modelexecution.fuml.convert.fuml.gen.ElementPopulatorGenerator.xtend")
public class MultiplicityElementPopulator implements IElementPopulator {

	@Override
	public void populate(fUML.Syntax.Classes.Kernel.Element fumlElement,
		org.modelexecution.fuml.Syntax.Classes.Kernel.Element fumlElement_, 
		ConversionResultImpl result
		) {
			
		if (!(fumlElement_ instanceof org.modelexecution.fuml.Syntax.Classes.Kernel.MultiplicityElement) ||
			 ! (fumlElement instanceof fUML.Syntax.Classes.Kernel.StructuralFeature || fumlElement instanceof fUML.Syntax.Classes.Kernel.Parameter || fumlElement instanceof fUML.Syntax.Actions.BasicActions.Pin )) {
			return;
		}
		
		fUML.Syntax.Classes.Kernel.MultiplicityElement fumlNamedElement = null;
		if (fumlElement instanceof fUML.Syntax.Classes.Kernel.StructuralFeature) {
			fumlNamedElement = ((fUML.Syntax.Classes.Kernel.StructuralFeature)fumlElement).multiplicityElement;
		} else if (fumlElement instanceof fUML.Syntax.Classes.Kernel.Parameter) {
			fumlNamedElement = ((fUML.Syntax.Classes.Kernel.Parameter)fumlElement).multiplicityElement;
		} else if (fumlElement instanceof fUML.Syntax.Actions.BasicActions.Pin) {
			fumlNamedElement = ((fUML.Syntax.Actions.BasicActions.Pin)fumlElement).multiplicityElement;
		}
		
		org.modelexecution.fuml.Syntax.Classes.Kernel.MultiplicityElement fumlNamedElement_ = (org.modelexecution.fuml.Syntax.Classes.Kernel.MultiplicityElement) fumlElement_;
		
		fumlNamedElement.isOrdered = fumlNamedElement_.isOrdered();
		fumlNamedElement.isUnique = fumlNamedElement_.isUnique();
		fumlNamedElement.upper.naturalValue = fumlNamedElement_.getUpper();
		fumlNamedElement.lower = fumlNamedElement_.getLower();
		fumlNamedElement.upperValue = (fUML.Syntax.Classes.Kernel.ValueSpecification) result.getFUMLElement(fumlNamedElement_.getUpperValue());
		fumlNamedElement.lowerValue = (fUML.Syntax.Classes.Kernel.ValueSpecification) result.getFUMLElement(fumlNamedElement_.getLowerValue());
							
	}
	
}
